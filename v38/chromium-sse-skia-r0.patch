--- chromium-38.0.2125.66/skia/skia_library_opts.gyp.orig	2014-09-27 12:09:46.000000000 +0400
+++ chromium-38.0.2125.66/skia/skia_library_opts.gyp	2014-09-27 12:11:18.027906376 +0400
@@ -58,9 +58,17 @@
             '../third_party/skia/src/opts/SkUtils_opts_SSE2.cpp',
             '../third_party/skia/src/opts/SkXfermode_opts_SSE2.cpp',
           ],
-          'dependencies': [
-            'skia_opts_ssse3',
-            'skia_opts_sse4',
+          'conditions': [
+            [ 'target_arch != "ia32"', {
+              'dependencies': [
+                'skia_opts_ssse3',
+                'skia_opts_sse4',
+              ],
+            }, {
+              'dependencies': [
+                'skia_opts_ssse3',
+              ],
+            }],
           ],
         }],
         [ 'target_arch == "arm"', {
--- chromium-38.0.2125.66/third_party/skia/src/opts/opts_check_x86.cpp.orig	2014-09-18 06:55:01.000000000 +0400
+++ chromium-38.0.2125.66/third_party/skia/src/opts/opts_check_x86.cpp	2014-09-27 18:17:54.969762252 +0400
@@ -13,9 +13,11 @@
 #include "SkBlitRect_opts_SSE2.h"
 #include "SkBlitRow.h"
 #include "SkBlitRow_opts_SSE2.h"
-#include "SkBlitRow_opts_SSE4.h"
 #include "SkBlurImage_opts_SSE2.h"
+#ifdef __x86_64__
+#include "SkBlitRow_opts_SSE4.h"
 #include "SkBlurImage_opts_SSE4.h"
+#endif
 #include "SkMorphology_opts.h"
 #include "SkMorphology_opts_SSE2.h"
 #include "SkRTConf.h"
@@ -83,11 +85,14 @@
     int cpu_info[4] = { 0 };
 
     getcpuid(1, cpu_info);
+#ifdef __x86_64__
     if ((cpu_info[2] & (1<<20)) != 0) {
         return SK_CPU_SSE_LEVEL_SSE42;
     } else if ((cpu_info[2] & (1<<19)) != 0) {
         return SK_CPU_SSE_LEVEL_SSE41;
-    } else if ((cpu_info[2] & (1<<9)) != 0) {
+    } else 
+#endif
+    if ((cpu_info[2] & (1<<9)) != 0) {
         return SK_CPU_SSE_LEVEL_SSSE3;
     } else if ((cpu_info[3] & (1<<26)) != 0) {
         return SK_CPU_SSE_LEVEL_SSE2;
@@ -218,7 +223,7 @@
     S32A_Blend_BlitRow32_SSE2,          // S32A_Blend,
 };
 
-#if defined(SK_ATT_ASM_SUPPORTED)
+#if defined(SK_ATT_ASM_SUPPORTED) && defined (__x86_64__)
 static SkBlitRow::Proc32 platform_32_procs_SSE4[] = {
     NULL,                               // S32_Opaque,
     S32_Blend_BlitRow32_SSE2,           // S32_Blend,
@@ -228,7 +233,7 @@
 #endif
 
 SkBlitRow::Proc32 SkBlitRow::PlatformProcs32(unsigned flags) {
-#if defined(SK_ATT_ASM_SUPPORTED)
+#if defined(SK_ATT_ASM_SUPPORTED) && defined (__x86_64__)
     if (supports_simd(SK_CPU_SSE_LEVEL_SSE41)) {
         return platform_32_procs_SSE4[flags];
     } else
@@ -359,10 +364,13 @@
 #ifdef SK_DISABLE_BLUR_DIVISION_OPTIMIZATION
     return false;
 #else
+#ifdef __x86_64__
     if (supports_simd(SK_CPU_SSE_LEVEL_SSE41)) {
         return SkBoxBlurGetPlatformProcs_SSE4(boxBlurX, boxBlurY, boxBlurXY, boxBlurYX);
     }
-    else if (supports_simd(SK_CPU_SSE_LEVEL_SSE2)) {
+    else
+#endif
+    if (supports_simd(SK_CPU_SSE_LEVEL_SSE2)) {
         return SkBoxBlurGetPlatformProcs_SSE2(boxBlurX, boxBlurY, boxBlurXY, boxBlurYX);
     }
     return false;
